{"version":3,"sources":["components/homePage/login/Login.jsx","components/Navbar/NavbarStyle.js","components/Navbar/Navbar.jsx","components/footer/FooterStyle.js","components/footer/Footer.jsx","components/homePage/info/Info.js","components/homePage/signup/SignupStyle.js","components/homePage/signup/Signup.jsx","components/homePage/steps/Steps.jsx","components/homePage/HomePage.jsx","components/profilePage/userInfo/UserInfo.jsx","components/profilePage/NewProjectForm/NewProjectForm.jsx","components/profilePage/project/Project.jsx","components/profilePage/ProfilePage.jsx","components/tasksDashboard/newTask/NewTask.jsx","components/tasksDashboard/task/Task.jsx","components/tasksDashboard/logComp/Log.jsx","components/tasksDashboard/TaskDashboard.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Login","state","email","password","message","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","axios","post","then","response","console","log","data","props","setUser","history","push","catch","err","className","onSubmit","this","htmlFor","type","id","onChange","Component","styled","div","color","Navbar","handleLogout","delete","goToProfile","user","onClick","Footer","p","Label","label","Form","form","Signup","firstName","lastName","role","isManager","handleCheck","checked","href","process","REACT_APP_SERVER_URL","Steps","HomePage","userObj","Info","UserInfo","src","image_Url","alt","NewProjectForm","projectName","collabText","inputCollaborators","users","filteredCollaborators","collaboratorsToAdd","createProject","members","updateAddedProjects","addColaborators","e","handleNameChange","handleCollabChange","filter","elem","includes","get","action","list","map","ele","Project","projects","showForm","showAll","project","getProjectData","error","getAll","to","_id","slice","ProfilePage","NewTask","title","description","status","author","assigneeText","inputAssignees","filteredAssignees","assigneesToAdd","createTask","paramsId","params","assignee","updateAddedTasks","addAssignees","handleAssigneeChange","member","Task","tasks","task","droppableId","provided","droppableProps","ref","innerRef","to_dos","index","draggableId","String","draggableProps","dragHandleProps","placeholder","doings","dones","Log","comment","allLogs","getAllData","element","TaskDashboard","to_do","doing","done","getName","match","deleteProject","updateState","todos","getTaskData","onDragEnd","result","destination","source","ticket","changeStatus","editProject","App","render","deleteUserState","exact","path","React","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee29b434.chunk.js","sourcesContent":["import React, { Component, Link } from \"react\";\nimport axios from \"axios\";\n\nexport default class Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    message: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    axios\n      .post(\"/api/auth/login\", {\n        email: this.state.email,\n        password: this.state.password\n      })\n      .then(response => {\n        console.log(\"LOGIN WORKED\", response.data);\n        this.props.setUser(response.data);\n\n        this.props.history.push(\"/profilepage\");\n        //Redirect\n      })\n      .catch(err => {\n        this.setState({\n          message: err.response.data.message\n        });\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <form className=\"login-form\" onSubmit={this.handleSubmit}>\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            value={this.state.email}\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"password\">Password: </label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"id\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n\n          <button type=\"submit\">Login</button>\n\n          {this.state.message && <p>{this.state.message}</p>}\n        </form>\n      </div>\n    );\n  }\n}\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  background-color: ${props => props.color};\r\n  padding: 10px;\r\n  color: #fff;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Login from \"../homePage/login/Login\";\nimport Nav from \"./NavbarStyle\";\n\nexport default class Navbar extends Component {\n  handleLogout = event => {\n    event.preventDefault();\n    axios.delete('/api/auth/logout').then(response => {\n      this.props.setUser('');\n      this.props.history.push('/');\n    });\n  };\n\n  goToProfile = () => {\n    this.props.history.push('/profilepage');\n  };\n\n  render() {\n    return (\n      <Nav color={\"#192c7e\"}>\n        <div></div>\n        <div>\n          {this.props.user ? (\n            <>\n              <button onClick={this.handleLogout}>Logout</button>\n              <button onClick={this.goToProfile}>Profile</button>\n            </>\n          ) : (\n            <Login history={this.props.history} setUser={this.props.setUser} />\n          )}\n        </div>\n      </Nav>\n    );\n  }\n}\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  background-color: #192c7e;\r\n  padding: 20px;\r\n  color: #fff;\r\n\r\n  flex-shrink: 0;\r\n`;\r\n","import React from \"react\";\r\nimport Footerstyle from \"./FooterStyle\";\r\nconst Footer = () => {\r\n  return <Footerstyle>Created by: Alexis, Ciwan & Lluís</Footerstyle>;\r\n};\r\n\r\nexport default Footer;\r\n","import styled from \"styled-components\";\nexport default styled.p`\n  background-color: green;\n`;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  ${'' /* padding: 15px;\n  border-radius: 12px;\n  border: 1px solid black; */}\n`;\n\nexport const Form = styled.form`\n  ${'' /* margin: 0 auto;\n  width: 50%;\n  min-width: 400px;\n  max-width: 800px;\n  text-align: center;\n  border: 1px solid #ddd;\n  padding-top: 0px;\n  padding-bottom: 90px;\n  color: black;\n  background: #6262ff; */}\n`;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Label, Form } from \"./SignupStyle\";\nexport default class Signup extends Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    role: \"\",\n    isManager: false,\n    email: \"\",\n    password: \"\",\n    message: \"\"\n  };\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleCheck = event => {\n    this.setState({\n      isManager: event.target.checked\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    axios\n      .post(\"/api/auth/signup\", {\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        role: this.state.role,\n        isManager: this.state.isManager,\n        email: this.state.email,\n        password: this.state.password\n      })\n      .then(response => {\n        console.log(\"here\", response);\n        console.log(\"a\", this.props.history);\n        this.props.history.push(\"/profilepage\");\n        this.props.setUser(response.data);\n      })\n      .catch(err => {\n        console.log(err.message);\n        this.setState({\n          message: err.message\n        });\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <Form className=\"signup-form\" onSubmit={this.handleSubmit}>\n          <h3>Signup</h3>\n          <Label htmlFor=\"firstName\">First Name: </Label>\n          <input\n            type=\"text\"\n            id=\"firstName\"\n            name=\"firstName\"\n            value={this.state.firstName}\n            onChange={this.handleChange}\n          />\n          <br></br>\n          <Label htmlFor=\"lasttName\">Last Name: </Label>\n          <input\n            type=\"text\"\n            id=\"lastName\"\n            name=\"lastName\"\n            value={this.state.lastName}\n            onChange={this.handleChange}\n          />\n          <br></br>\n          <Label htmlFor=\"role\">Role: </Label>\n          <input\n            type=\"text\"\n            id=\"role\"\n            name=\"role\"\n            value={this.state.role}\n            onChange={this.handleChange}\n          />\n          <br></br>\n          <Label htmlFor=\"isManager\">Are you a Manager?</Label>\n          <input\n            type=\"checkbox\"\n            id=\"isManager\"\n            name=\"isManager\"\n            checked={this.state.isManager}\n            onChange={this.handleCheck}\n          />\n          <br></br>\n          <Label htmlFor=\"email\">Email: </Label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            value={this.state.email}\n            onChange={this.handleChange}\n          />\n          <br></br>\n          <Label htmlFor=\"password\">Password: </Label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n          <br></br>\n          <button type=\"submit\">Create</button>\n          {this.state.message && <p>{this.state.message}</p>}\n          <br></br>\n          <a href={process.env.REACT_APP_SERVER_URL + \"/api/auth/linkedin\"}>\n            Login via Linkedin\n          </a>\n        </Form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nconst Steps = () => {\n  return (\n    <container>\n      <div>\n        <h3 className=\"stepsh3\">How does it work? </h3>\n        <div className=\"steps\">\n          <div className=\"small-steps\">\n            <h3>Creat an Account:</h3>\n            <p className=\"parag\">\n              Create your Blue account. It's free and it will always be!\n            </p>\n          </div>\n          <div className=\"small-steps\">\n            <h3>Create your Projects:</h3>\n            <p className=\"parag\">\n              Create your project and don't forget to add the project members.\n              They will have acces tot hem wherever they are located.\n            </p>\n          </div>\n          <div className=\"small-steps\">\n            <h3>Organize your Pipeline:</h3>\n            <p className=\"parag\">\n              Add the tasks related to your project. You can change the task\n              status according to the project progress. Simple and easy to\n              coordinate your teams remotly\n            </p>\n          </div>\n        </div>\n      </div>\n    </container>\n  );\n};\n\nexport default Steps;\n","import React, { Component, Route } from 'react';\nimport Info from './info/Info';\nimport Signup from './signup/Signup';\nimport Steps from './steps/Steps';\nimport Navbar from '../Navbar/Navbar';\n\nexport default class HomePage extends Component {\n  state = {\n    user: this.props.user\n  };\n\n  setUser = userObj => {\n    this.setState({\n      user: userObj\n    });\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"blue2\">\n          <h1>Blue</h1>\n          <Signup setUser={this.props.setUser} history={this.props.history} />\n        </div>\n\n        <Info />\n\n        <Steps />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class UserInfo extends Component {\n  state = {\n    user: this.props.user\n  };\n\n  setUser = userObj => {\n    this.setState({\n      user: userObj\n    });\n  };\n\n  render() {\n    console.log(\"Aquiiiiii\", this.props.user);\n    return (\n      <div className=\"information-container\">\n        <div className=\"profile-image\">\n          <img src={this.props.user?.image_Url} alt=\"User Image\" />\n        </div>\n        <div className=\"text-info\">\n          <div className=\"name-display\">\n            <p>\n              Name:\n              {this.props.user?.firstName} {this.props.user?.lastName}\n            </p>\n          </div>\n          <div className=\"role-display\">\n            <p>\n              Your role:\n              {this.props.user?.role}\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class NewProjectForm extends Component {\n  state = {\n    projectName: \"\",\n    collabText: \"\",\n    inputCollaborators: [],\n    users: [],\n    filteredCollaborators: [],\n    collaboratorsToAdd: []\n  };\n\n  componentDidMount() {\n    axios.get(\"/api/allMembers\").then(response => {\n      this.setState({\n        users: response.data\n      });\n    });\n  }\n\n  createProject = event => {\n    event.preventDefault();\n\n    axios\n      .post(\"/api/project/createProject\", {\n        name: this.state.projectName,\n        members: this.state.collaboratorsToAdd\n      })\n      .then(response => {\n        this.props.updateAddedProjects(response.data);\n      });\n  };\n\n  addColaborators = e => {\n    e.preventDefault();\n    this.setState({\n      collaboratorsToAdd: [\n        ...this.state.collaboratorsToAdd,\n        this.state.inputCollaborators\n      ],\n      collabText: \"\",\n      inputCollaborators: \"\"\n    });\n  };\n\n  handleNameChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleCollabChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n      filteredCollaborators: this.state.users.filter(elem => {\n        return elem.firstName.includes(this.state.collabText);\n      }),\n      inputCollaborators: event.target.value\n    });\n  };\n\n  /*   handleAddCollab = event => {\n    event.preventDefault();\n    this.state.inputCollaborators.push(this.state.collabText);\n    this.setState({\n      inputCollaborators: this.state.inputCollaborators,\n      collabText: ''\n    });\n  }; */\n\n  render() {\n    return (\n      <div>\n        <form action=\"\">\n          <label htmlFor=\"projectName\">Project's name:</label>\n          <input\n            type=\"text\"\n            id=\"projectName\"\n            name=\"projectName\"\n            value={this.state.projectName}\n            onChange={this.handleNameChange}\n          ></input>\n          <br />\n          <div>\n            <label htmlFor=\"collaborators\">Project's collaborators:</label>\n            <input\n              list=\"users\"\n              onChange={this.handleCollabChange}\n              type=\"text\"\n              id=\"collaborators\"\n              name=\"collabText\"\n              value={this.inputCollaborators}\n            ></input>\n            <datalist id=\"users\">\n              {this.state.filteredCollaborators.map(user => {\n                return (\n                  <option value={`${user.firstName} ${user.lastName}`}></option>\n                );\n              })}\n            </datalist>\n            {/*     <button onClick={this.handleAddCollab}>Add</button> */}\n          </div>\n          <div>\n            {this.state.collaboratorsToAdd.map(ele => {\n              return <p>{ele}</p>;\n            })}\n          </div>\n          <button onClick={this.addColaborators}>add collaborator</button>\n          <button onClick={this.createProject}> create new Project</button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport NewProjectForm from \"../NewProjectForm/NewProjectForm\";\n\nexport default class Project extends Component {\n  state = {\n    projects: [],\n    showForm: false,\n    showAll: false\n  };\n  componentDidMount() {\n    this.getProjectData();\n  }\n\n  updateAddedProjects = project => {\n    this.state.projects.push(project);\n    this.setState({\n      projects: this.state.projects,\n      showForm: false\n    });\n  };\n\n  getProjectData = () => {\n    axios\n      .get(\"/api/projects\")\n      .then(response => {\n        console.log(response.data);\n        this.setState({\n          projects: response.data\n        });\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n  getAll = () => {\n    this.setState({\n      showAll: !this.state.showAll\n    });\n  };\n\n  showForm = () => {\n    this.setState({\n      showForm: !this.state.showForm\n    });\n  };\n\n  createProject = () => {\n    axios\n      .post(\"/api/project/createProject\")\n      .then(response => {\n        console.log(response);\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.getAll}>All projects</button>\n\n        <button onClick={this.showForm}>Create New Project</button>\n        <h3>Your Projects:</h3>\n\n        {this.state.showForm ? (\n          <NewProjectForm updateAddedProjects={this.updateAddedProjects} />\n        ) : (\n          \"\"\n        )}\n        <div className=\"containerProjects\">\n          {this.state.showAll ? (\n            this.state.projects.map(project => {\n              return (\n                <Link to={`project/${project._id}`}>\n                  <div className=\"projectBox\">\n                    <div>\n                      <h4>{project.name}</h4>\n                    </div>\n                  </div>\n                </Link>\n              );\n            })\n          ) : (\n            <>\n              {this.state.projects.slice(0, 3).map(project => {\n                return (\n                  <Link to={`project/${project._id}`}>\n                    <div className=\"projectBox\">\n                      <span>{project.name}</span>\n                    </div>\n                  </Link>\n                );\n              })}\n            </>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport UserInfo from './userInfo/UserInfo';\nimport Project from './project/Project';\nimport NewProjectForm from './NewProjectForm/NewProjectForm';\n//import Navbar from \"../Navbar/Navbar\";\n\nexport default class ProfilePage extends Component {\n  render() {\n    return (\n      <div>\n        <UserInfo setUser={this.props.setUser} user={this.props.user} />\n        <Project user={this.props.user} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class NewTask extends Component {\n  state = {\n    title: '',\n    description: '',\n    status: '',\n    author: '',\n    assigneeText: '',\n    inputAssignees: [],\n    users: [],\n    filteredAssignees: [],\n    assigneesToAdd: []\n  };\n\n  componentDidMount() {\n    axios.get('/api/allMembers').then(response => {\n      this.setState({\n        users: response.data\n      });\n    });\n  }\n\n  createTask = event => {\n    event.preventDefault();\n\n    let paramsId = this.props.params.id;\n\n    axios\n      .post(`/api/project/${paramsId}/createTask`, {\n        title: this.state.title,\n        assignee: this.state.inputAssignees,\n        description: this.state.description,\n        author: this.state.author\n      })\n      .then(response => {\n        this.props.updateAddedTasks(response.data);\n      });\n  };\n\n  addAssignees = e => {\n    e.preventDefault();\n    this.setState({\n      assigneesToAdd: [...this.state.assigneesToAdd, this.state.inputAssignees],\n      assigneeText: '',\n      inputAssignees: ''\n    });\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleAssigneeChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n      filteredAssignees: this.state.users.filter(elem => {\n        return elem.firstName.includes(this.state.assigneeText);\n      }),\n      inputAssignees: event.target.value\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <form action=\"\">\n          <label htmlFor=\"title\">Task Title</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            value={this.state.title}\n            onChange={this.handleChange}\n          ></input>\n          <br />\n          <label htmlFor=\"content\">Description</label>\n          <input\n            id=\"description\"\n            name=\"description\"\n            type=\"text\"\n            value={this.state.assignee}\n            onChange={this.handleChange}\n          />\n\n          <div>\n            <label htmlFor=\"collaborators\">Assigned To: </label>\n            <input\n              list=\"users\"\n              onChange={this.handleAssigneeChange}\n              type=\"text\"\n              id=\"assignees\"\n              name=\"assigneeText\"\n              value={this.inputAssignees}\n            ></input>\n            <datalist id=\"users\">\n              {this.state.filteredAssignees.map(user => {\n                return (\n                  <option value={`${user.firstName} ${user.lastName}`}></option>\n                );\n              })}\n            </datalist>\n          </div>\n          <div>\n            {this.state.assigneesToAdd.map(member => {\n              return <p>{member}</p>;\n            })}\n          </div>\n          <button onClick={this.createTask}>Create Task</button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport NewTask from \"../newTask/NewTask\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nexport default class Task extends Component {\n  state = {\n    showForm: false,\n    tasks: []\n  };\n  /* componentDidMount() {\n    this.getTaskData();\n  } */\n\n  // componentWillUpdate(prevProps, prevState) {\n  //   if (prevState.tasks !== this.state.tasks) {\n  //     console.log(prevState.tasks, this.state.tasks);\n  //     this.getTaskData();\n  //   }\n  // }\n\n  updateAddedTasks = task => {\n    this.props.updateAddedTasks(task);\n\n    this.setState({\n      tasks: [...this.state.tasks, task],\n      showForm: false\n    });\n  };\n\n  showForm = () => {\n    this.setState({\n      showForm: !this.state.showForm\n    });\n  };\n\n  createTask = () => {\n    axios\n      .post(`/project/${this.props.params.id}/createTask`)\n      .then(response => {\n        this.setState({ tasks: [...this.state.tasks, response.data] });\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.showForm}>Create New Task</button>\n        {this.state.showForm ? (\n          <NewTask\n            params={this.props.params}\n            updateAddedTasks={this.updateAddedTasks}\n          />\n        ) : (\n          \"\"\n        )}\n        <div className=\"tasks-container\">\n          <Droppable droppableId=\"toDoId\">\n            {provided => (\n              <div\n                className=\"droppable\"\n                id=\"todo\"\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                <h2>To dos:</h2>\n                {this.props.to_dos?.map((task, index) => {\n                  return (\n                    <Draggable index={index} draggableId={String(task._id)}>\n                      {provided => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                        >\n                          <div id=\"{task._id}\">{task.title}</div>\n                        </div>\n                      )}\n                    </Draggable>\n                  );\n                })}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n          <div>\n            <Droppable droppableId=\"doingId\">\n              {provided => (\n                <div\n                  className=\"droppable\"\n                  id=\"doing\"\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                >\n                  <h2>Doing:</h2>\n                  {this.props.doings?.map((task, index) => {\n                    return (\n                      <Draggable index={index} draggableId={String(task._id)}>\n                        {provided => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                          >\n                            <div id=\"{task._id}\">{task.title}</div>\n                          </div>\n                        )}\n                      </Draggable>\n                    );\n                  })}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </div>\n          <div>\n            <Droppable droppableId=\"doneId\">\n              {provided => (\n                <div\n                  className=\"droppable\"\n                  id=\"done\"\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                >\n                  <h2>Done:</h2>\n                  {this.props.dones?.map((task, index) => {\n                    return (\n                      <Draggable index={index} draggableId={String(task._id)}>\n                        {provided => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                          >\n                            <div id=\"{task._id}\">{task.title}</div>\n                          </div>\n                        )}\n                      </Draggable>\n                    );\n                  })}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </div>\n          {/* {this.state.tasks.length.map(task => {\n          return <span>{task.name}</span>;\n        })} */}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport NewTask from \"../newTask/NewTask\";\n\nexport default class Log extends Component {\n  state = {\n    author: \"\",\n    comment: \"\",\n    project: \"\",\n    allLogs: []\n  };\n\n  componentDidMount() {\n    this.getAllData();\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  getAllData = () => {\n    console.log(\"TUUUUUUUU\", this.props.params);\n    const id = this.props.params.id;\n\n    axios.get(`/api/project/${id}/log`).then(response => {\n      this.setState({\n        author: \"\",\n        comment: \"\",\n        project: \"\",\n        allLogs: response.data\n      });\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const id = this.props.params?.id;\n    axios\n      .post(`/api/project/${id}/log`, {\n        author: this.state.author,\n        comment: this.state.comment,\n        project: this.state.project\n      })\n      .then(response => {\n        this.getAllData();\n        /* \n        axios.get(`/api/project/${id}/log`).then(response => {\n          this.setState({ \n            author: \"\",\n            comment: \"\",\n            project: \"\",\n            allLogs: response.data\n          });\n        });\n       */\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <h4>Activity History:</h4>\n        <div className=\"log\">\n          {this.state.allLogs.map(element => {\n            console.log(element);\n            return (\n              <div>\n                {element.name}: {element.comment}\n              </div>\n            );\n          })}\n        </div>\n        <form className=\"create-comment   \" onSubmit={this.handleSubmit}>\n          <label htmlFor=\"comment\"> Comment</label>\n          <input\n            id=\"comment\"\n            name=\"comment\"\n            value={this.state.comment}\n            onChange={this.handleChange}\n          ></input>\n          <button>Send</button>\n        </form>\n      </div>\n    );\n  }\n}\n","import { DragDropContext } from \"react-beautiful-dnd\";\nimport React, { Component } from \"react\";\nimport Task from \"./task/Task\";\nimport Log from \"./logComp/Log\";\nimport axios from \"axios\";\n\nexport default class TaskDashboard extends Component {\n  state = {\n    to_do: [],\n    doing: [],\n    done: [],\n    showForm: false,\n    projectName: \"\"\n  };\n\n  componentDidMount() {\n    this.getTaskData();\n    this.getName();\n  }\n  getName = () => {\n    const id = this.props.match.params.id;\n    axios.get(`/api/projecta/${id}`).then(response => {\n      this.setState({ projectName: response.data.name });\n    });\n  };\n  deleteProject = () => {\n    const id = this.props.match.params.id;\n    axios\n      .post(`/api/project/${id}/delete`)\n      .then(response => {\n        this.props.history.push(\"/profilepage\");\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  updateState = (todos, doings, dones) => {\n    this.setState({\n      doing: doings,\n      to_do: todos,\n      done: dones\n    });\n  };\n\n  getTaskData = () => {\n    const todos = [];\n    const doings = [];\n    const dones = [];\n\n    this.setState({\n      doing: [],\n      to_do: [],\n      done: []\n    });\n    axios\n      .get(`/api/project/${this.props.match.params.id}/tasks`)\n      .then(response => {\n        response.data.map(task => {\n          switch (task.status) {\n            case \"doing\":\n              doings.push(task);\n              break;\n            case \"to_do\":\n              todos.push(task);\n              break;\n            case \"done\":\n              dones.push(task);\n              break;\n            default:\n              break;\n          }\n        });\n        this.updateState(todos, doings, dones);\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  onDragEnd = result => {\n    const { destination, source, draggableId } = result;\n    console.log(destination, source);\n    if (!destination || destination.droppableId === source.droppableId) {\n      return;\n    }\n    if (destination.droppableId === \"toDoId\") {\n      axios\n        .post(\n          `/api/project/${this.props.match.params.id}/changestatus/${draggableId}`,\n          { status: \"to_do\" }\n        )\n        .then(response => {\n          let { status, ticket } = response.data;\n          this.setState({\n            [status]: [...this.state[status], ticket],\n            [ticket.status]: this.state[ticket.status].filter(ele => {\n              return ele._id !== ticket._id;\n            })\n          });\n        });\n    }\n    if (destination.droppableId === \"doneId\") {\n      axios\n        .post(\n          `/api/project/${this.props.match.params.id}/changestatus/${draggableId}`,\n          { status: \"done\" }\n        )\n        .then(response => {\n          let { status, ticket } = response.data;\n          this.setState({\n            [status]: [...this.state[status], ticket],\n            [ticket.status]: this.state[ticket.status].filter(ele => {\n              return ele._id !== ticket._id;\n            })\n          });\n          // this.getTaskData();\n        });\n    }\n    if (destination.droppableId === \"doingId\") {\n      axios\n        .post(\n          `/api/project/${this.props.match.params.id}/changestatus/${draggableId}`,\n          { status: \"doing\" }\n        )\n        .then(response => {\n          let { status, ticket } = response.data;\n          this.setState({\n            [status]: [...this.state[status], ticket],\n            [ticket.status]: this.state[ticket.status].filter(ele => {\n              return ele._id !== ticket._id;\n            })\n          });\n          // this.getTaskData();\n        });\n    }\n  };\n\n  changeStatus = () => {};\n\n  updateAddedTasks = task => {\n    this.setState({\n      to_do: [...this.state.to_do, task],\n      showForm: false\n    });\n  };\n  // this.state.tasks.push(task);\n\n  deleteProject = () => {\n    console.log(\"whateverdeleteteeeeee\", this.props.user.projects);\n    const id = this.props.match.params.id;\n\n    axios\n      .post(`/api/project/${id}/delete`)\n      .then(response => {\n        console.log(response);\n        console.log(this.props.history);\n        this.props.history.push(\"/profilepage\");\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  editProject = () => {\n    const id = this.props.match.params.id;\n\n    axios\n      .post(`/api/project/${id}/edit`)\n      .then(response => {\n        console.log(response);\n        console.log(this.props.history);\n        this.props.history.push(\"/profilepage\");\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n  render() {\n    console.log(this.props.match.params.id);\n\n    return (\n      <div>\n        <h2 className=\"title\">{this.state.projectName}</h2>\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <div>\n            <div className=\"general-papa\">\n              <Task\n                to_dos={this.state.to_do}\n                doings={this.state.doing}\n                dones={this.state.done}\n                params={this.props.match.params}\n                updateAddedTasks={this.updateAddedTasks}\n              />\n              <Log params={this.props.match.params} user={this.props.user} />\n            </div>\n          </div>\n        </DragDropContext>\n        <div>\n          <button onClick={this.deleteProject}>Delete this project</button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport Footer from './components/footer/Footer';\nimport HomePage from './components/homePage/HomePage';\nimport ProfilePage from './components/profilePage/ProfilePage';\nimport TaskDashboard from './components/tasksDashboard/TaskDashboard';\n\nclass App extends React.Component {\n  state = {\n    user: this.props.user\n  };\n\n  setUser = userObj => {\n    this.setState({\n      user: userObj\n    });\n  };\n\n  deleteUserState() {\n    this.setState({\n      user: \"\"\n    });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Route\n          render={props => (\n            <Navbar\n              color={'#192c7e'}\n              history={props.history}\n              setUser={this.setUser}\n              user={this.state.user}\n              deleteUserState={this.deleteUserState}\n            />\n          )}\n        />\n\n        {this.state.user ? (\n          <Route\n            exact\n            path=\"/\"\n            render={props => <ProfilePage {...props} user={this.state.user} />}\n          />\n        ) : (\n          <Route\n            exact\n            path=\"/\"\n            render={props => (\n              <HomePage\n                {...props}\n                setUser={this.setUser}\n                user={this.state.user}\n                history={props.history}\n              />\n            )}\n          />\n        )}\n\n        <Route\n          exact\n          path=\"/profilepage\"\n          render={props => <ProfilePage {...props} user={this.state.user} />}\n        />\n        <Route\n          exact\n          path=\"/project/:id\"\n          render={props => <TaskDashboard {...props} user={this.state.user} />}\n        />\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Switch } from 'react-router-dom';\nimport axios from 'axios';\n\naxios.get('/api/auth/loggedin').then(response => {\n  ReactDOM.render(\n    <BrowserRouter>\n      <App user={response.data} />\n    </BrowserRouter>,\n    document.getElementById('root')\n  );\n});\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}